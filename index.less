/* CHANGELOG
 * Written by Josh Grooms on 20151201
 */

@import "./Standards/Colors/Syntax";

atom-text-editor
{
    background-color:       @background-color;
    color:                  @code-color;

    .gutter
    {
        background-color:   @line-number-background-color;
        color:              @line-number-text-color;

        .line-number
        {
            background-color:   transparent;
            text-align:         center;

            &.cursor-line,
            &.cursor-line-no-selection
            {
                background-color:   @line-number-background-color-selected;
                color:              @line-number-text-color-selected;
                font-weight:        bold;
            }

            &.folded,
            &:after     { color: @text-color-folded; }
            .icon-right { padding: 0 0.2em; }
        }

    }

    .selection .region
    {
        background-color: @selection-color;
        color: @text-color-selected;
    }

    .cursor                                     { color: @code-color; }
    .fold-marker:after                          { color: @text-color-folded; }
    .indent-guide                               { color: @code-color; }
    .invisible                                  { color: @code-color; }
    .invisible-character                        { color: @code-color; }
    .wrap-guide                                 { background-color: @wrap-color; }
}

.syntax--entity
{
    &.syntax--class,
    &.syntax--type.syntax--class                { color: @class-color; }
    &.syntax--function                          { color: @function-color; }
    // &.syntax--attribute-name                    { color: @attribute-color; }
    &.syntax--inherited-class                   { color: @class-color; }
    &.syntax--mixin                             { color: @function-color; }
}

.syntax--meta
{
    .syntax--brace                              { color: @enclosure-color; }
    &.syntax--class                             { color: @class-color; }
    &.syntax--import,
    &.syntax--require                           { color: @preprocessor-color; }
    &.syntax--selector                          { color: @violet; }
    &.syntax--separator                         { background-color: @gray; }
}


.syntax--markup
{
    &.syntax--bold
    {
        color: @orange;
        font-weight: bold;
    }

    &.syntax--italic
    {
        color: @violet;
        font-style: italic;
    }

    &.syntax--heading .syntax--punctuation.syntax--definition.syntax--heading
    {
        color: @blue;
    }

    &.syntax--changed                       { color: @text-version-modified; }
    &.syntax--deleted                       { color: @text-version-removed; }
    &.syntax--inserted                      { color: @text-version-added; }
    &.syntax--list                          { color: @red; }
    &.syntax--quote                         { color: @orange; }
    &.syntax--raw.syntax--inline            { color: @green; }
}

.syntax--none                               { color: @text-color; }
.syntax--punctuation                        { color: @operator-color; }
.syntax--string                             { color: @string-color; }



/** CUSTOM SYNTAX CATEGORIES **/
// These are for my custom-written language syntax rules that don't obey the awkward conventions above, which were originally
// pulled from TextMate packages.
.syntax--comment
{
    color: @comment-color;
    &.syntax--section       { font-weight: bold; }
}

.syntax--enclosure
{
    color: @enclosure-color;
    &.syntax--comment       { color: @comment-color; }
    &.syntax--string        { color: @string-color; }
}

.syntax--function
{
    color: @function-color;
    &.syntax--method        { color: @method-color; }
}

.syntax--keyword,
.syntax--storage
{
    color: @keyword-color;
    &.syntax--operator      { color: @keyword-color; }
    &.syntax--type          { color: @keyword-color; }
}

.syntax--literal,
.syntax--constant
{
    color: @literal-color;
    &.syntax--string        { color: @string-color; }
}

.syntax--operator
{
    color: @operator-color;
}
&.syntax--word          { color: @keyword-color; }

.syntax--problem,
.syntax--illegal,
.syntax--invalid
{
    background-color:   @error-color;
    color:              @black;
}

.syntax--preprocessor
{
    color: @preprocessor-color;

    &.syntax--define.syntax--name   { color: @code-color; }
    &.syntax--include.syntax--file  { color: @string-color; }
}

.syntax--type
{
    color: @type-color;

    &.syntax--class         { color: @class-color; }
    &.syntax--keyword       { color: @keyword-color; }
    &.syntax--enumeration   { color: @enumeration-color; }
    &.syntax--primitive     { color: @primitive-color; }
    &.syntax--property-name { color: @argument-color; }
    &.syntax--struct        { color: @struct-color; }
}

.syntax--variable
{
    color: @variable-color;

    &.syntax--argument      { color: @argument-color; }
    &.syntax--parameter     { color: @argument-color; }
    &.syntax--property      { color: @property-color; }
}
